"""Initial database schema based on ShipTo integration and new metrics

Revision ID: 41a8920581be
Revises: 
Create Date: 2025-04-23 12:22:53.881303

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '41a8920581be'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_historical_revenues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_code', sa.String(length=350), nullable=False),
    sa.Column('base_card_code', sa.String(length=50), nullable=True),
    sa.Column('ship_to_code', sa.String(length=50), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('total_revenue', sa.Float(), nullable=True),
    sa.Column('transaction_count', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('sales_rep', sa.String(length=255), nullable=True),
    sa.Column('distributor', sa.String(length=100), nullable=True),
    sa.Column('yearly_products_json', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('canonical_code', 'year', name='uix_canon_code_year')
    )
    with op.batch_alter_table('account_historical_revenues', schema=None) as batch_op:
        batch_op.create_index('idx_hist_base_code_year', ['base_card_code', 'year'], unique=False)
        batch_op.create_index('idx_hist_canon_code_year', ['canonical_code', 'year'], unique=False)
        batch_op.create_index('idx_hist_distributor_year', ['distributor', 'year'], unique=False)
        batch_op.create_index('idx_hist_rep_year', ['sales_rep', 'year'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_base_card_code'), ['base_card_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_canonical_code'), ['canonical_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_distributor'), ['distributor'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_sales_rep'), ['sales_rep'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_ship_to_code'), ['ship_to_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_historical_revenues_year'), ['year'], unique=False)

    op.create_table('account_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_code', sa.String(length=350), nullable=False),
    sa.Column('base_card_code', sa.String(length=50), nullable=True),
    sa.Column('ship_to_code', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('full_address', sa.String(length=255), nullable=True),
    sa.Column('customer_id', sa.String(length=255), nullable=True),
    sa.Column('sales_rep', sa.String(length=255), nullable=True),
    sa.Column('sales_rep_name', sa.String(length=255), nullable=True),
    sa.Column('distributor', sa.String(length=255), nullable=True),
    sa.Column('products_purchased', sa.Text(), nullable=True),
    sa.Column('last_purchase_date', sa.DateTime(), nullable=True),
    sa.Column('last_purchase_amount', sa.Float(), nullable=True),
    sa.Column('account_total', sa.Float(), nullable=True),
    sa.Column('purchase_frequency', sa.Integer(), nullable=True),
    sa.Column('days_since_last_purchase', sa.Integer(), nullable=True),
    sa.Column('median_interval_days', sa.Integer(), nullable=True),
    sa.Column('next_expected_purchase_date', sa.DateTime(), nullable=True),
    sa.Column('days_overdue', sa.Integer(), nullable=True),
    sa.Column('avg_interval_py', sa.Float(), nullable=True),
    sa.Column('avg_interval_cytd', sa.Float(), nullable=True),
    sa.Column('cytd_revenue', sa.Float(), nullable=True),
    sa.Column('yep_revenue', sa.Float(), nullable=True),
    sa.Column('pace_vs_ly', sa.Float(), nullable=True),
    sa.Column('avg_order_amount_cytd', sa.Float(), nullable=True),
    sa.Column('recency_score', sa.Integer(), nullable=True),
    sa.Column('frequency_score', sa.Integer(), nullable=True),
    sa.Column('monetary_score', sa.Integer(), nullable=True),
    sa.Column('rfm_score', sa.Float(), nullable=True),
    sa.Column('rfm_segment', sa.String(length=30), nullable=True),
    sa.Column('health_score', sa.Float(), nullable=True),
    sa.Column('health_category', sa.String(length=20), nullable=True),
    sa.Column('priority_score', sa.Float(), nullable=True),
    sa.Column('enhanced_priority_score', sa.Float(), nullable=True),
    sa.Column('yoy_revenue_growth', sa.Float(), nullable=True),
    sa.Column('yoy_purchase_count_growth', sa.Float(), nullable=True),
    sa.Column('product_coverage_percentage', sa.Float(), nullable=True),
    sa.Column('carried_top_products_json', sa.Text(), nullable=True),
    sa.Column('missing_top_products_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('account_predictions', schema=None) as batch_op:
        batch_op.create_index('idx_prediction_base_code', ['base_card_code'], unique=False)
        batch_op.create_index('idx_prediction_dist_rep', ['distributor', 'sales_rep'], unique=False)
        batch_op.create_index('idx_prediction_next_due', ['next_expected_purchase_date'], unique=False)
        batch_op.create_index('idx_prediction_rep_due', ['sales_rep', 'next_expected_purchase_date'], unique=False)
        batch_op.create_index('idx_prediction_ship_to', ['ship_to_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_predictions_base_card_code'), ['base_card_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_predictions_canonical_code'), ['canonical_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_account_predictions_distributor'), ['distributor'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_predictions_sales_rep'), ['sales_rep'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_predictions_ship_to_code'), ['ship_to_code'], unique=False)

    op.create_table('account_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_code', sa.String(length=350), nullable=False),
    sa.Column('base_card_code', sa.String(length=50), nullable=True),
    sa.Column('ship_to_code', sa.String(length=50), nullable=True),
    sa.Column('snapshot_date', sa.DateTime(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('account_total', sa.Float(), nullable=True),
    sa.Column('yearly_revenue', sa.Float(), nullable=True),
    sa.Column('yearly_purchases', sa.Integer(), nullable=True),
    sa.Column('health_score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('canonical_code', 'year', name='uix_snapshot_canon_year')
    )
    with op.batch_alter_table('account_snapshots', schema=None) as batch_op:
        batch_op.create_index('idx_snapshot_base_year', ['base_card_code', 'year'], unique=False)
        batch_op.create_index('idx_snapshot_canon_year', ['canonical_code', 'year'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_snapshots_base_card_code'), ['base_card_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_snapshots_canonical_code'), ['canonical_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_snapshots_ship_to_code'), ['ship_to_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_snapshots_year'), ['year'], unique=False)

    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_code', sa.String(length=350), nullable=False),
    sa.Column('base_card_code', sa.String(length=50), nullable=True),
    sa.Column('account_name', sa.String(length=100), nullable=True),
    sa.Column('sales_rep_id', sa.String(length=50), nullable=True),
    sa.Column('sales_rep_name', sa.String(length=100), nullable=True),
    sa.Column('activity_type', sa.String(length=20), nullable=False),
    sa.Column('activity_datetime', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('outcome', sa.String(length=50), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_log_activity_datetime'), ['activity_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_activity_type'), ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_base_card_code'), ['base_card_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_canonical_code'), ['canonical_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_sales_rep_id'), ['sales_rep_id'], unique=False)

    op.create_table('sales_rep_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sales_rep', sa.String(length=255), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('total_revenue', sa.Float(), nullable=True),
    sa.Column('accounts_count', sa.Integer(), nullable=True),
    sa.Column('active_accounts', sa.Integer(), nullable=True),
    sa.Column('at_risk_accounts', sa.Integer(), nullable=True),
    sa.Column('yoy_revenue_growth', sa.Float(), nullable=True),
    sa.Column('yoy_accounts_growth', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sales_rep', 'year', 'month', 'quarter', name='uix_rep_time_period')
    )
    with op.batch_alter_table('sales_rep_performance', schema=None) as batch_op:
        batch_op.create_index('idx_salesrep_perf_rep_year', ['sales_rep', 'year'], unique=False)
        batch_op.create_index('idx_salesrep_perf_rep_year_month', ['sales_rep', 'year', 'month'], unique=False)
        batch_op.create_index('idx_salesrep_perf_rep_year_quarter', ['sales_rep', 'year', 'quarter'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_rep_performance_sales_rep'), ['sales_rep'], unique=False)

    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_code', sa.String(length=350), nullable=False),
    sa.Column('base_card_code', sa.String(length=50), nullable=True),
    sa.Column('ship_to_code', sa.String(length=50), nullable=True),
    sa.Column('posting_date', sa.DateTime(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('distributor', sa.String(length=100), nullable=True),
    sa.Column('sales_rep', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.create_index('idx_transaction_canon_date', ['canonical_code', 'posting_date'], unique=False)
        batch_op.create_index('idx_transaction_canon_year', ['canonical_code', 'year'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_base_card_code'), ['base_card_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_canonical_code'), ['canonical_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_distributor'), ['distributor'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_posting_date'), ['posting_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_sales_rep'), ['sales_rep'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_ship_to_code'), ['ship_to_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_year'), ['year'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_year'))
        batch_op.drop_index(batch_op.f('ix_transactions_ship_to_code'))
        batch_op.drop_index(batch_op.f('ix_transactions_sales_rep'))
        batch_op.drop_index(batch_op.f('ix_transactions_posting_date'))
        batch_op.drop_index(batch_op.f('ix_transactions_distributor'))
        batch_op.drop_index(batch_op.f('ix_transactions_canonical_code'))
        batch_op.drop_index(batch_op.f('ix_transactions_base_card_code'))
        batch_op.drop_index('idx_transaction_canon_year')
        batch_op.drop_index('idx_transaction_canon_date')

    op.drop_table('transactions')
    with op.batch_alter_table('sales_rep_performance', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_rep_performance_sales_rep'))
        batch_op.drop_index('idx_salesrep_perf_rep_year_quarter')
        batch_op.drop_index('idx_salesrep_perf_rep_year_month')
        batch_op.drop_index('idx_salesrep_perf_rep_year')

    op.drop_table('sales_rep_performance')
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_log_sales_rep_id'))
        batch_op.drop_index(batch_op.f('ix_activity_log_canonical_code'))
        batch_op.drop_index(batch_op.f('ix_activity_log_base_card_code'))
        batch_op.drop_index(batch_op.f('ix_activity_log_activity_type'))
        batch_op.drop_index(batch_op.f('ix_activity_log_activity_datetime'))

    op.drop_table('activity_log')
    with op.batch_alter_table('account_snapshots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_snapshots_year'))
        batch_op.drop_index(batch_op.f('ix_account_snapshots_ship_to_code'))
        batch_op.drop_index(batch_op.f('ix_account_snapshots_canonical_code'))
        batch_op.drop_index(batch_op.f('ix_account_snapshots_base_card_code'))
        batch_op.drop_index('idx_snapshot_canon_year')
        batch_op.drop_index('idx_snapshot_base_year')

    op.drop_table('account_snapshots')
    with op.batch_alter_table('account_predictions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_predictions_ship_to_code'))
        batch_op.drop_index(batch_op.f('ix_account_predictions_sales_rep'))
        batch_op.drop_index(batch_op.f('ix_account_predictions_distributor'))
        batch_op.drop_index(batch_op.f('ix_account_predictions_canonical_code'))
        batch_op.drop_index(batch_op.f('ix_account_predictions_base_card_code'))
        batch_op.drop_index('idx_prediction_ship_to')
        batch_op.drop_index('idx_prediction_rep_due')
        batch_op.drop_index('idx_prediction_next_due')
        batch_op.drop_index('idx_prediction_dist_rep')
        batch_op.drop_index('idx_prediction_base_code')

    op.drop_table('account_predictions')
    with op.batch_alter_table('account_historical_revenues', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_year'))
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_ship_to_code'))
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_sales_rep'))
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_distributor'))
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_canonical_code'))
        batch_op.drop_index(batch_op.f('ix_account_historical_revenues_base_card_code'))
        batch_op.drop_index('idx_hist_rep_year')
        batch_op.drop_index('idx_hist_distributor_year')
        batch_op.drop_index('idx_hist_canon_code_year')
        batch_op.drop_index('idx_hist_base_code_year')

    op.drop_table('account_historical_revenues')
    # ### end Alembic commands ###
